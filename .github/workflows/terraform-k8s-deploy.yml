name: Terraform Kubernetes Deploy Workflow

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "yes" to confirm deployment'
        required: true
        default: 'no' 

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'eu-west-2'
  EKS_CLUSTER_NAME: 'eks-proj'

jobs:
  static_analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: "if no confirmation, exit"
        run: |
          if [ "${{ github.event.inputs.confirmation }}" != "yes" ]; then
            echo "Exiting without deployment"
            exit 1
          fi
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format
        run: terraform fmt
        working-directory: terraform

      - name: Terraform Lint Install
        run: | 
          curl -s https://raw.githubusercontent.com/wata727/tflint/master/install_linux.sh | bash
          tflint --version

      # - name: Run tfsec
      #   uses: aquasecurity/tfsec-action@v1.0.0
      #   with:
      #     working-directory: terraform
      #     soft-fail: true

      - name: Checkov Install
        run: |
          pip install checkov

      - name: Run Checkov
        run: |
          checkov -d . || echo "Checkov found issues, but continuing workflow..."
        working-directory: terraform
        
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: static_analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run:
          terraform init
        working-directory: terraform

      - name: Terraform Plan
        run:
          terraform plan
        working-directory: terraform



  terraform-deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: terraform-plan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Apply
        run:
          terraform apply -auto-approve
        working-directory: terraform


  kubernetes-deploy:
    name: Kubernetes Deploy
    runs-on: ubuntu-latest
    needs: terraform-deploy  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig for EKS cluster
        run: |
          aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Apply issuer.yaml
        run: kubectl apply -f helm-values/issuer.yaml

      - name: Apply app-argo.yaml
        run: kubectl apply -f argocd/app-argo.yaml

      - name: Deploy 2048 game
        run: kubectl apply -f apps/2048-deploy.yml
